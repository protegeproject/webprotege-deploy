version: '3'

services:

  rabbitmq:
    image: rabbitmq:management
    restart: "no"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5


  keycloak:
    image: alexsilaghi93/webprotege-keycloak:0.0.1
    command: [ "start-dev" ]
    ports:
      - 8080:8080
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
      - KC_PROXY=edge
      - KC_LOG_LEVEL=INFO
      - KC_HTTP_RELATIVE_PATH=/keycloak-admin
      - KC_FEATURES=hostname
      - KC_THEME=webprotege
      - KC_THEME_LOGIN=webprotege
    volumes:
      - keycloak-h2-directory:/opt/keycloak/data
      - ./keycloak/webprotege.v2:/opt/keycloak/themes/webprotege.v2
    healthcheck:
      test: [ "CMD", "/opt/keycloak/bin/kc.sh", "show-config" ]
      interval: 30s
      timeout: 10s
      retries: 5

  zipkin:
    image: openzipkin/zipkin
    ports:
      - 9411:9411

  minio:
    image: minio/minio
    command: [ "server", "/data", "--console-address", ":9001" ]
    restart: always
    volumes:
      - minio_data:/data
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: webprotege
      MINIO_ROOT_PASSWORD: webprotege

  webprotege-gwt-api-gateway:
    image: protegeproject/webprotege-gwt-api-gateway:2.0.4-WHO
    depends_on:
      keycloak:
        condition: service_healthy
      minio:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      zipkin:
        condition: service_started
    ports:
      - '5008:5008'
      - '7777:7777'
    environment:
      spring.zipkin.baseUrl: http://zipkin:9411
      LOGGING_LEVEL_ROOT: INFO
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      SPRING_RABBITMQ_PUBLISHER_CONFIRM_TYPE: NONE
      SPRING_RABBITMQ_PUBLISHER_RETURNS: "FALSE"
      webprotege.minio.bucketName: "webprotege-uploads"
      webprotege.minio.accessKey: webprotege
      webprotege.minio.secretKey: webprotege
      webprotege.minio.endPoint: http://minio:9000
      spring.servlet.multipart.max-file-size: 300MB
      spring.servlet.multipart.max-request-size: 300MB
      WEBPROTEGE_ALLOWEDORIGIN: http://icatx.northeurope.cloudapp.azure.com
      webprotege.rabbit.timeout: 600000
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://icatx.northeurope.cloudapp.azure.com/keycloak-admin/realms/webprotege
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://icatx.northeurope.cloudapp.azure.com/keycloak-admin/realms/webprotege
      _JAVA_OPTIONS: >
          -Xdebug
          -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008


  webprotege-gwt-ui-server:
    image: protegeproject/webprotege-gwt-ui-server:7.2.10-WHO
    depends_on:
      webprotege-gwt-api-gateway:
        condition: service_started
      keycloak:
        condition: service_healthy
    ports:
      - '5007:5007'
    environment:
      minio.access.key: minioadmin
      minio.access.secret: minioadmin
      minio.endPoint: http://minio:9000
      KEYCLOAK_AUTH_URL: http://icatx.northeurope.cloudapp.azure.com/keycloak-admin/
      WEBPROTEGE_GWT_API_GATEWAY_ENDPOINT: http://webprotege-gwt-api-gateway:7777
      webprotege_gwt_api_gateway_endPoint: http://webprotege-gwt-api-gateway:7777
      webprotege.gwt-api-gateway.endPoint: http://webprotege-gwt-api-gateway:7777
      webprotege.rabbit.timeout: 300000
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      _JAVA_OPTIONS: >
        -Xdebug
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007


  webprotege-authorization-service:
    image: protegeproject/webprotege-authorization-service:1.0.8-WHO
    ports:
      - '5010:5010'
    depends_on:
      keycloak:
        condition: service_healthy
      zipkin:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      keycloak.jwk-set-uri: http://keycloak:8080
      LOGGING_LEVEL_ROOT: INFO
      spring.zipkin.baseUrl: http://zipkin:9411
      SPRING_DATA_MONGODB_URI: "${MONGO_URL}"
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      KEYCLOAK_ISSUER_URL: http://icatx.northeurope.cloudapp.azure.com/keycloak-admin/realms/webprotege/protocol/openid-connect/certs
      _JAVA_OPTIONS: >
        -Xdebug
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5010

  webprotege-user-management-service:
    image: protegeproject/webprotege-user-management-service:1.0.5
    ports:
      - '5009:5009'
    depends_on:
      keycloak:
        condition: service_healthy
      zipkin:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      LOGGING_LEVEL_ROOT: INFO
      _JAVA_OPTIONS: >
        -Xdebug
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5009

  webprotege-event-history-service:
    image: protegeproject/webprotege-event-history-service:2.0.12-WHO
    ports:
      - '5006:5006'
    depends_on:
      zipkin:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      webprotege.keycloak.serverUrl: http://icatx.northeurope.cloudapp.azure.com/keycloak-admin
      LOGGING_LEVEL_ROOT: INFO
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      _JAVA_OPTIONS: >
        -Xdebug
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006

  webprotege-ontology-processing-service:
    image: protegeproject/webprotege-ontology-processing-service:1.0.0
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
      zipkin:
        condition: service_started
    environment:
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      LOGGING_LEVEL_ROOT: INFO
      webprotege.minio.accessKey: webprotege
      webprotege.minio.secretKey: webprotege
      webprotege.minio.endPoint: http://minio:9000


  webprotege-initial-revision-history-service:
    image: protegeproject/webprotege-initial-revision-history-service:1.0.0
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
      zipkin:
        condition: service_started
    environment:
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      webprotege.minio.accessKey: webprotege
      webprotege.minio.secretKey: webprotege
      webprotege.minio.endPoint: http://minio:9000

  webprotege-backend-service:
    user: root
    image: protegeproject/webprotege-backend-service:2.2.4-WHO
    ports:
      - "5005:5005"  # For remote debugging
      - "9010:9010"  # For JMX monitoring
    depends_on:
      zipkin:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      spring.zipkin.baseUrl: "http://zipkin:9411"
      webprotege.minio.accessKey: "webprotege"
      webprotege.minio.secretKey: "webprotege"
      webprotege.minio.endPoint: "http://minio:9000"
      webprotege.directories.data: "/srv/webprotege"
      webprotege.directories.backup : "/webprotege/backup"
      SPRING_DATA_MONGODB_URI: "${MONGO_URL}"
      LOGGING_LEVEL_ROOT: INFO
      _JAVA_OPTIONS: >
        -Xdebug
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.port=9010
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
      JDK_JAVA_OPTIONS: "--add-opens java.base/sun.net=ALL-UNNAMED"
      JVM_ENV: -Xms7g -Xmx7g -XX:MaxRAMPercentage=70
      webprotege.rabbit.timeout: 600000
    volumes:
      - webprotege-data-directory:/media/webprotegebackend
      - webprotege-backup-directory:/webprotege/backup

  webprotege-linearization-service:
    user: root
    image: protegeproject/webprotege-linearization-service:1.0.18
    ports:
      - '5011:5011'
    depends_on:
      zipkin:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      spring.zipkin.baseUrl: http://zipkin:9411
      webprotege.minio.accessKey: webprotege
      webprotege.minio.secretKey: webprotege
      webprotege.minio.endPoint: http://minio:9000
      webprotege.directories.data: /srv/webprotege
      SPRING_DATA_MONGODB_URI: "${MONGO_URL}"
      _JAVA_OPTIONS: >
        -Xdebug
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5011
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      webprotege.rabbit.timeout: 600000
    volumes:
      - webprotege-data-directory:/srv/webprotege


  webprotege-postcoordination-service:
    user: root
    image: protegeproject/webprotege-postcoordination-service:1.0.16
    ports:
      - '5012:5012'
    depends_on:
      zipkin:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      spring.zipkin.baseUrl: http://zipkin:9411
      webprotege.minio.accessKey: webprotege
      webprotege.minio.secretKey: webprotege
      webprotege.minio.endPoint: http://minio:9000
      webprotege.directories.data: /srv/webprotege
      SPRING_DATA_MONGODB_URI: "${MONGO_URL}"
      _JAVA_OPTIONS: >
        -Xdebug
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5012
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      webprotege.rabbit.timeout: 600000
    volumes:
      - webprotege-data-directory:/srv/webprotege

#
#  icatx-versioning-service:
#    user: root
#    image: protegeproject/icatx-versioning-service:0.0.2
#    ports:
#      - '5013:5013'
#      - '7722:7722'
#    depends_on:
#      mongo:
#        condition: service_started
#      zipkin:
#        condition: service_started
#      rabbitmq:
#        condition: service_healthy
#    environment:
#      spring.zipkin.baseUrl: http://zipkin:9411
#      webprotege.minio.accessKey: webprotege
#      webprotege.minio.secretKey: webprotege
#      webprotege.minio.endPoint: http://minio:9000
#      webprotege.directories.data: /srv/webprotege
#      webprotege.directories.backup: /webprotege/backup
#      SPRING_DATA_MONGODB_URI: "${MONGO_URL}"
#      webprotege.versioning.location: /srv/versioning/
#      _JAVA_OPTIONS: >
#        -Xdebug
#        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5013
#      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
#      webprotege.rabbit.timeout: 600000
#    volumes:
#      - webprotege-data-directory:/srv/webprotege
#      - webprotege-backup-directory:/webprotege/backup
#      - webprotege-versioning-directory:/srv/versioning/

  icatx-api-gateway:
    user: root
    image: protegeproject/icatx-api-gateway:0.0.8
    ports:
      - '5014:5014'
      - '7779:7779'
    depends_on:
      zipkin:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      spring.zipkin.baseUrl: http://zipkin:9411
      webprotege.minio.accessKey: webprotege
      webprotege.minio.secretKey: webprotege
      webprotege.minio.endPoint: http://minio:9000
      webprotege.directories.data: /srv/webprotege
      SPRING_DATA_MONGODB_URI: "${MONGO_URL}"
      _JAVA_OPTIONS: >
        -Xdebug
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5014
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      webprotege.rabbit.timeout: 600000
    volumes:
      - webprotege-data-directory:/srv/webprotege
      - webprotege-backup-directory:/webprotege/backup


  nginx:
    image: protegeproject/webprotege-nginx:1.2.1
    hostname: icatx.northeurope.cloudapp.azure.com
    ports:
      - 80:80
    depends_on:
      - webprotege-gwt-ui-server
      - keycloak

volumes:
  webprotege-data-directory:
  keycloak-h2-directory:
  minio_data:
  webprotege-backup-directory:
  webprotege-versioning-directory: