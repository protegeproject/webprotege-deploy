version: '3'

services:

  mongo:
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongo-data-directory:/data/db
    networks:
      - elk

  rabbitmq:
    image: rabbitmq:management
    restart: "no"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - elk


  keycloak:
    image: keycloak/keycloak:26.1
    command: [ "start-dev" ]
    ports:
      - 8080:8080
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
      - KC_PROXY=edge
      - KC_LOG_LEVEL=DEBUG
      - KC_HTTP_RELATIVE_PATH=/keycloak-admin
      - KC_FEATURES=hostname
    volumes:
      - keycloak-h2-directory:/opt/keycloak/data
      - ./keycloak:/tmp
    healthcheck:
      test: ["CMD", "/opt/keycloak/bin/kcadm.sh", "get", "realms/webprotege", "--server", "http://localhost:8080/keycloak-admin", "--realm", "master", "--user", "admin", "--password", "password"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - elk

  zipkin:
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    networks:
      - elk

  minio:
    image: minio/minio
    command: [ "server", "/data", "--console-address", ":9001" ]
    restart: always
    volumes:
     - minio_data:/data
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: webprotege
      MINIO_ROOT_PASSWORD: webprotege
    networks:
      - elk

  webprotege-gwt-api-gateway:
    image: protegeproject/webprotege-gwt-api-gateway:3.0.1
    ports:
      - '5008:5008'
    depends_on:
      keycloak:
        condition: service_healthy
      minio:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      zipkin:
        condition: service_started
    environment:
      spring.zipkin.baseUrl: http://zipkin:9411
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      SPRING_RABBITMQ_PUBLISHER_CONFIRM_TYPE: NONE
      SPRING_RABBITMQ_PUBLISHER_RETURNS: "FALSE"
      webprotege.minio.bucketName: "webprotege-uploads"
      webprotege.minio.accessKey: webprotege
      webprotege.minio.secretKey: webprotege
      webprotege.minio.endPoint: http://minio:9000
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://webprotege-local.edu/keycloak-admin/realms/webprotege
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://webprotege-local.edu/keycloak-admin/realms/webprotege
      spring.servlet.multipart.max-file-size: 300MB
      spring.servlet.multipart.max-request-size: 300MB
      WEBPROTEGE_ALLOWEDORIGIN: http://${SERVER_HOST}
      webprotege.rabbit.timeout: 600000
      _JAVA_OPTIONS: >
        -Xdebug
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - elk


  webprotege-gwt-ui-server:
    image: protegeproject/webprotege-gwt-ui-server:9.0.3
    depends_on:
      webprotege-gwt-api-gateway:
        condition: service_started
      keycloak:
        condition: service_healthy
    ports:
      - 8888:8080
    environment:
      minio.access.key: minioadmin
      minio.access.secret: minioadmin
      minio.endPoint: http://minio:9000
      KEYCLOAK_AUTH_URL: http://${SERVER_HOST}/keycloak-admin/
      webprotege.gwt-api-gateway.endPoint: http://webprotege-gwt-api-gateway:7777
      webprotege.websocketUrl: wss://${SERVER_HOST}/wsapps
      webprotege.logoutUrl: http://${SERVER_HOST}/webprotege/logout
      webprotege.fileUploadurl: http://${SERVER_HOST}
      webprotege.keycloakLogoutUrl: ${KEYCLOAK_LOGOUT_URL}
      webprotege.rabbit.timeout: 300000
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      _JAVA_OPTIONS: >
        -Xdebug
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - elk


  webprotege-authorization-service:
    image: protegeproject/webprotege-authorization-service:3.0.6
    ports:
      - '5010:5010'
    depends_on:
      keycloak:
        condition: service_healthy
      mongo:
        condition: service_started
      zipkin:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      spring.data.mongodb.host: mongo
      spring.data.mongodb.database: webprotege
      keycloak.jwk-set-uri: http://keycloak:8080
      spring.zipkin.baseUrl: http://zipkin:9411
      SPRING_DATA_MONGODB_URI: "${MONGO_URL}"
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      KEYCLOAK_ISSUER_URL: ${JWK_SET_URI}
      _JAVA_OPTIONS: >
        -Xdebug
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5010
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - elk

  webprotege-user-management-service:
    image: protegeproject/webprotege-user-management-service:1.0.10
    depends_on:
      keycloak:
        condition: service_healthy
      mongo:
        condition: service_started
      zipkin:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      SPRING_DATA_MONGODB_URI: "${MONGO_URL}"
      webprotege.keycloak.serverUrl: http://${SERVER_HOST}/keycloak-admin
      webprotege.keycloak.clientSecret: ${ADMIN_CLI_SECRET}
      webprotege.keycloak.clientId: user-management
      LOGGING_LEVEL_ROOT: INFO
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - elk

  webprotege-event-history-service:
    image: protegeproject/webprotege-event-history-service:2.0.0
    ports:
      - '5006:5006'
    depends_on:
      mongo:
        condition: service_started
      zipkin:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      webprotege.keycloak.serverUrl: http://${SERVER_HOST}/keycloak-admin
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_DATA_MONGODB_CORE_MONGOTEMPLATE: INFO
      LOGGING_LEVEL_ORG_MONGODB_DRIVER: INFO
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      SPRING_DATA_MONGODB_URI: "${MONGO_URL}"

      _JAVA_OPTIONS: >
        -Xdebug
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - elk

  webprotege-ontology-processing-service:
    image: protegeproject/webprotege-ontology-processing-service:1.0.7
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
      zipkin:
        condition: service_started
    environment:
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      webprotege.minio.accessKey: webprotege
      webprotege.minio.secretKey: webprotege
      webprotege.minio.endPoint: http://minio:9000
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - elk


  webprotege-initial-revision-history-service:
    image: protegeproject/webprotege-initial-revision-history-service:1.0.8
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
      zipkin:
        condition: service_started
    environment:
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      webprotege.minio.accessKey: webprotege
      webprotege.minio.secretKey: webprotege
      webprotege.minio.endPoint: http://minio:9000
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - elk

  webprotege-backend-service:
    user: root
    image: protegeproject/webprotege-backend-service:5.0.2
    ports:
      - '5005:5005'
    depends_on:
      mongo:
        condition: service_started
      zipkin:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      spring.zipkin.baseUrl: http://zipkin:9411
      webprotege.minio.accessKey: webprotege
      webprotege.minio.secretKey: webprotege
      webprotege.minio.endPoint: http://minio:9000
      webprotege.directories.data: /srv/webprotege
      SPRING_DATA_MONGODB_URI: "${MONGO_URL}"
      _JAVA_OPTIONS: >
        -Xdebug
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      JDK_JAVA_OPTIONS: --add-opens java.base/sun.net=ALL-UNNAMED
      webprotege.rabbit.timeout: 600000
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - elk
    volumes:
    - webprotege-data-directory:/srv/webprotege

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elk
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.2
    ports:
      - "5044:5044"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    networks:
      - elk
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.12.2
    user: root
    volumes:
      - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - elk
    depends_on:
      - logstash
    command: ["filebeat", "-e", "--strict.perms=false", "-c", "/usr/share/filebeat/filebeat.yml"]

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SAVED_OBJECTS_IMPORT=/usr/share/kibana/dashboards/webprotege-logs.ndjson
      - ELASTICSEARCH_SERVICE_HOST=elasticsearch
      - ELASTICSEARCH_SERVICE_PORT=9200
      - XPACK_SECURITY_ENABLED=false
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=kibana
      - SERVER_BASEPATH=/kibana
      - SERVER_REWRITEBASEPATH=true
      - SERVER_PUBLICBASEURL=http://${SERVER_HOST}/kibana
      - SERVER_HOST=0.0.0.0
      - SERVER_NAME=kibana
      - SERVER_MAXPAYLOADBYTES=1048576
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=none
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
      - ./kibana/dashboards:/usr/share/kibana/dashboards
    networks:
      - elk
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: protegeproject/webprotege-nginx:1.2.2
    hostname: ${SERVER_HOST}
    ports:
      - 80:80
    depends_on:
      - webprotege-gwt-ui-server
      - keycloak
    networks:
      - elk

volumes:

  webprotege-data-directory:
  mongo-data-directory:
  keycloak-h2-directory:
  minio_data:
  elasticsearch-data:

networks:
  elk:
    driver: bridge
    name: elk